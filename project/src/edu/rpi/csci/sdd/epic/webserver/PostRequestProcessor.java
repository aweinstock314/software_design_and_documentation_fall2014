package edu.rpi.csci.sdd.epic.webserver;

import java.io.IOException;
import java.util.Map;
import java.util.TreeMap;

import com.sun.net.httpserver.HttpExchange;
import com.sun.net.httpserver.HttpHandler;

import edu.rpi.csci.sdd.epic.util.Util;

// PostRequestProcessor implements the Template Method Design Pattern.
//  It extracts HTTP POST parameters from its input into a 
//  map, and delegates to its subclasses on what to do with 
//  that input, and what page to serve.
public abstract class PostRequestProcessor implements HttpHandler
{
    private static final boolean DEBUG_MODE = true;
    protected abstract String processPostRequest(Map<String, String> postPairs) throws Exception;

    // parseCheckbox converts strings returned by HTML checkboxes into easy-to-use booleans
    protected boolean parseCheckbox(String s) { return (s != null) && (s.startsWith("on")); }

    @Override

    // Serves a page generated by a post request.
    public void handle(HttpExchange e) throws IOException
    {
        Map<String, String> postPairs = new TreeMap<String, String>();
        // get the raw POST data from the input
        String postData = Util.slurpStream(e.getRequestBody());
        // if debugging output is enabled, log the url being served and the IP it's being served to
        if(DEBUG_MODE) { System.out.printf("Post request for page \"%s\" (from \"%s\")\n", e.getRequestURI(), e.getRemoteAddress()); }
        if(DEBUG_MODE) { System.out.printf("Data: '''%s'''\n", postData); }
        // loop over the (key, value) pairs in the raw POST data
        for(String kvp : postData.trim().split("&"))
        {
            // add the (key, value) pair into the map
            String[] kv = kvp.split("=");
            postPairs.put(kv[0], kv[1]);
            // if debugging output is enabled, log the (key, value) pair
            if(DEBUG_MODE) { System.out.printf("\t\"%s\": \"%s\"\n", kv[0], kv[1]); }
        }
        try
        {
            // serve the page generated by the (key, value) map.
            WSUtil.serveString(e, 200, processPostRequest(postPairs));
        }
        catch(Exception ex)
        {
            // if there's an error, serve the error
            ex.printStackTrace();
            WSUtil.serveInternalError(e, ex);
        }
    }
}
